<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.elasticsearch</groupId>
    <artifactId>elasticsearch-prometheus-exporter</artifactId>
    <version>2.4.6.0</version>
    <packaging>jar</packaging>
    <name>Elasticsearch Prometheus Exporter Plugin</name>
    <description>Export ElasticSearch metrics to Prometheus</description>
    <url>https://github.com/vvanholl/elasticsearch-prometheus-exporter</url>
    <inceptionYear>2016</inceptionYear>
    <licenses>
        <license>
            <name>Apache License</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:vvanholl/elasticsearch-prometheus-exporter.git
        </connection>
        <developerConnection>
            scm:git:git@github.com:vvanholl/elasticsearch-prometheus-exporter.git
        </developerConnection>
        <url>http://github.com/vvanholl/elasticsearch-prometheus-exporter.git</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <elasticsearch.version>2.4.6</elasticsearch.version>
        <!--
          Whenever you change Elasticsearch version verify and update Lucene version as well.
          Why? Because ES integration test support is based on Lucene randomized testing framework.
          https://www.elastic.co/guide/en/elasticsearch/reference/2.4/why-randomized-testing.html
        -->
        <lucene.version>5.5.4</lucene.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <prometheus.simpleclient.version>0.0.26</prometheus.simpleclient.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>${prometheus.simpleclient.version}</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_common</artifactId>
            <version>${prometheus.simpleclient.version}</version>
        </dependency>

        <!--
          Why we need lucene-test-framework? See the following doc:
          https://www.elastic.co/guide/en/elasticsearch/reference/2.4/using-elasticsearch-test-classes.html
        -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
            <version>${lucene.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!--
                Notice: Sticking with specific jUnit version can be important!
                https://github.com/elastic/elasticsearch/issues/22689#issuecomment-293269790
            -->
             <version>4.11</version>
             <scope>test</scope>
             <!--
                JAR HELL: junit:junit:jar:4.11 uses org.hamcrest:hamcrest-core:jar:1.3
              -->
             <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <inherited>true</inherited>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!--<skipTests>${skip.surefire.tests}</skipTests>-->
                    <excludes>
                        <exclude>**/*IntegTestCase.java</exclude>
                    </excludes>
                    <environmentVariables>
                        <ENV_VAR_EXISTS>value</ENV_VAR_EXISTS>
                        <ENV_VAR_EXISTS_BOOLEAN>true</ENV_VAR_EXISTS_BOOLEAN>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <argLine>-Djava.security.manager -Djava.security.policy=${basedir}/src/it/resources/java.policy</argLine>
                    <includes>
                        <include>**/*IntegTestCase.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>${project.build.directory}/releases/
                    </outputDirectory>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assemblies/plugin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.4</version>
                <configuration>
                    <prefix>/usr/local</prefix>
                    <group>Development/Tools</group>
                    <targetOS>linux</targetOS>
                    <mappings>
                        <mapping>
                            <directory>/usr/local/lib</directory>
                            <filemode>644</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>target/releases</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
